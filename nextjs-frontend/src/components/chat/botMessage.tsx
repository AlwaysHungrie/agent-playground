import { HiDocumentDownload, HiX } from 'react-icons/hi'
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from '@/components/ui/popover'
import { Message } from './chatInterface'
import CTAButton from '../cta'

interface AttestationProps {
  type: 'public' | 'private'
  attestationUrl?: string
}

const AttestationPopover = ({ type, attestationUrl }: AttestationProps) => {
  if (!attestationUrl) {
    return (
      <Popover>
        <PopoverTrigger>
          <HiX className="w-4 h-4 hover:opacity-80 transition-opacity text-red-500" />
        </PopoverTrigger>
        <PopoverContent className="absolute bg-white rounded-sm shadow-sm p-1 max-w-xs text-xs text-black whitespace-normal">
          <p>
            This message could not be verified to have been generated by the
            agent.
          </p>
        </PopoverContent>
      </Popover>
    )
  }

  const descriptionPrefix = 'This is a '
  const descriptionType = type === 'public' ? 'public ' : 'private '

  const description =
    type === 'public'
      ? 'that does not reveal the system prompt but requires a trusted third party to verify it.'
      : 'that should only be shared with trusted parties as it contains the system prompt of the agent.'

  const fileKey = attestationUrl.split('/').slice(3).join('/')
  return (
    <Popover>
      <PopoverTrigger>
        <HiDocumentDownload className="w-4 h-4 hover:opacity-80 transition-opacity" />
      </PopoverTrigger>
      <PopoverContent className="absolute bg-white rounded-sm shadow-sm p-1 max-w-xs text-xs text-black whitespace-normal">
        <p>
          {descriptionPrefix}
          <span className="font-bold">{descriptionType}</span>
          {description}
          <br />
          file key: <span className="break-all bg-yellow-100">{fileKey}</span>
          <br />
          Click here to{' '}
          <a
            href={attestationUrl}
            target="_blank"
            rel="noopener noreferrer"
            className="text-blue-500 underline"
          >
            download
          </a>{' '}
          and here to{' '}
          <a
            href="https://verifier-playground.constella.one/"
            target="_blank"
            rel="noopener noreferrer"
            className="text-blue-500 underline"
          >
            inspect
          </a>
        </p>
      </PopoverContent>
    </Popover>
  )
}

const FunctionCall = ({ message }: { message: Message }) => {
  if (!message.isFunctionCall) {
    return null
  }

  return (
    <div className="flex flex-col">
      <p className="mb-2 px-4 pt-2 text-sm italic">
        Agent decided to call a function:
      </p>
      <div className="flex flex-col gap-2 mx-4 px-4 pb-4 pt-2 bg-gray-100 rounded-lg self-center">
        <p className="font-bold">{message.functionCallName}</p>
        <p className="text-sm bg-white rounded-sm p-2 overflow-x-auto max-w-[300px]">
          {message.functionCallParameters}
        </p>
        <CTAButton
          onClick={() => {
            console.log('Call Function')
          }}
          className="mt-2"
        >
          Execute With Constella
        </CTAButton>
      </div>
    </div>
  )
}

const BotMessage = ({ message }: { message: Message }) => {
  const backgroundColor = message.isError ? 'bg-red-100' : 'bg-white'

  return (
    <div className="flex justify-start">
      <div
        className={`${backgroundColor} border border-gray-200 rounded-t-lg rounded-br-lg max-w-[80%] flex flex-col`}
      >
        {message.isFunctionCall ? (
          <FunctionCall message={message} />
        ) : (
          <p className="mb-2 px-4 pt-2">{message.text}</p>
        )}

        <div className="flex p-2">
          <div className="text-xs text-gray-400 mr-1">Response Verified:</div>
          <AttestationPopover
            type="public"
            attestationUrl={message.publicAttestation}
          />
          <AttestationPopover
            type="private"
            attestationUrl={message.privateAttestation}
          />
        </div>
      </div>
    </div>
  )
}

export default BotMessage
